<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Devops Projects on Ahmed Ayman</title>
    <link>https://a7medayman6.github.io/projects/devops/</link>
    <description>Recent content in Devops Projects on Ahmed Ayman</description>
    <image>
      <url>https://a7medayman6.github.io/static/</url>
      <link>https://a7medayman6.github.io/static/</link>
    </image>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://a7medayman6.github.io/projects/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OSCGeeks</title>
      <link>https://a7medayman6.github.io/projects/devops/oscgeeks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://a7medayman6.github.io/projects/devops/oscgeeks/</guid>
      <description>SOURCE CODE OSCGEEKS.ORG is the official website of the Open Source Community at ASU-FCIS. Deployment Stack  PHP : Laravel -&amp;gt; Backend MySql -&amp;gt; Database Nginx -&amp;gt; WebServer Docker -&amp;gt; php Container Dockerfile Docker-Compose -&amp;gt; running the Multi-Container app docker-compose file  The deployment stack is running on top of Docker multi-container web app. check docker-compose file here
How to Run Locally ?  clone the repository  git clone https://github.</description>
    </item>
    
    <item>
      <title>Goviolin</title>
      <link>https://a7medayman6.github.io/projects/devops/goviolin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://a7medayman6.github.io/projects/devops/goviolin/</guid>
      <description>Forked from Rosalita/GoViolin to practice DevOps Concepts and tools : CI/CD using Jenkins and GitHub Actions, Containerization using Docker, Deploying using Kubernetes. GoViolin is a web app written in Go that helps with violin practice. SOURCE CODE Currently hosted on Heroku at https://go-violin.herokuapp.com/
Table of Contencts  Features Used DevOps Tools and Technologies Run using Docker Enable Jenkins pipeline on your machine Dockeraize GoViolin - How ? Building the pipeline Deployment on Kubernetes GitHub Actions Workflow Jenkins Console Output Success Emails Pipeline Features  Features GoViolin allows practice over both 1 and 2 octaves.</description>
    </item>
    
    <item>
      <title>To Do List with Flask, Docker, and GitHub Actions</title>
      <link>https://a7medayman6.github.io/projects/devops/todolist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://a7medayman6.github.io/projects/devops/todolist/</guid>
      <description>Simple Web App to practice Flask, Docker, and GitHub Actions Hands-On LIVE DEMO SOURCE CODE Running Try it out live on heroku! TO DO LIST
USING DOCKER - PULLING FROM DOCKER HUB # pull the image from docker hub $ docker pull a7medayman6/todolist-flask # create docker volume for the database to keep your tasks everytime you run ir $ docker volume create todolist.db # run the container # map port 5000 in the container to 5001 (or any other free port) # map the docker volume you created to /app/db $ docker run -d -p 5001:5000 -v todolist.</description>
    </item>
    
    <item>
      <title>Hello World From Container - Flask Web App</title>
      <link>https://a7medayman6.github.io/projects/devops/hello-world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://a7medayman6.github.io/projects/devops/hello-world/</guid>
      <description>Demo flask Web App to practice Docker Basics. Source Code BUILD git clone . cd Hello-World-From-Container docker build -t hello-world:latest . docker run -p 5001:5000 hello-world # visit http:/0.0.0.0:5001 to see the web site presnting the container id it&amp;#39;s running from! Or pull it from docker hub! docker pull a7medayman6/hello-world-flask docker run -p 5001:5000 hello-world-flask # visit http:/0.0.0.0:5001 to see the web site presnting the container id it&amp;#39;s running from! Preview Same Container name!</description>
    </item>
    
  </channel>
</rss>
